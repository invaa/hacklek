{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/prescription-optimizer/prescription-optimizer.component.html","webpack:///./src/app/components/prescription-optimizer/prescription-optimizer.component.ts","webpack:///./src/app/components/prescription-parser/prescription-parser.component.html","webpack:///./src/app/components/prescription-parser/prescription-parser.component.ts","webpack:///./src/app/components/stepper/stepper.component.html","webpack:///./src/app/components/stepper/stepper.component.ts","webpack:///./src/app/components/user-data/user-data.component.css","webpack:///./src/app/components/user-data/user-data.component.html","webpack:///./src/app/components/user-data/user-data.component.ts","webpack:///./src/app/service/api-constants.ts","webpack:///./src/app/service/api.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/model/user-data.ts","webpack:///./src/module/material.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar color=\\\"primary\\\">Hack Lek</mat-toolbar>\\r\\n<app-stepper></app-stepper>\\r\\n\"","import {Component} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {MatIconRegistry} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor(private iconRegistry: MatIconRegistry, private sanitizer: DomSanitizer) {\r\n    iconRegistry.addSvgIcon('pregnant_women', sanitizer.bypassSecurityTrustResourceUrl('assets/baseline-pregnant_woman-24px.svg'));\r\n  }\r\n\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MaterialModule} from '../module/material.module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpClientModule} from '@angular/common/http';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {UserDataComponent} from './components/user-data/user-data.component';\r\nimport {PrescriptionParserComponent} from './components/prescription-parser/prescription-parser.component';\r\nimport {PrescriptionOptimizerComponent} from './components/prescription-optimizer/prescription-optimizer.component';\r\nimport {StepperComponent} from './components/stepper/stepper.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserDataComponent,\r\n    PrescriptionParserComponent,\r\n    PrescriptionOptimizerComponent,\r\n    StepperComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MaterialModule,\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"<mat-list>\\r\\n  <mat-list-item *ngFor=\\\"let med of currentMedicines\\\">\\r\\n    <h3 matLine> {{med.name}} </h3>\\r\\n    <p matLine>\\r\\n      <span>- Price: {{med.price}} </span>\\r\\n    </p>\\r\\n    <p matLine style=\\\"color: red;\\\" *ngIf=\\\"userData.pregnancy && med.notForPregnant\\\">\\r\\n      <span>\\r\\n        <mat-icon svgIcon=\\\"pregnant_women\\\"></mat-icon>\\r\\n        Prohibited to use by pregnant women.\\r\\n      </span>\\r\\n    </p>\\r\\n    <p matLine style=\\\"color: red;\\\" *ngIf=\\\"userData.alcohol && med.noAlcAllowed\\\">\\r\\n      <span>\\r\\n        <mat-icon>warning</mat-icon>\\r\\n        Do not mix with alcohol!\\r\\n      </span>\\r\\n    </p>\\r\\n  </mat-list-item>\\r\\n</mat-list>\\r\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" style=\\\"margin-top: 10px;\\\">\\r\\n  <div>Current price: {{currentPrice | number : '1.2-2'}} PLN</div>\\r\\n  <button *ngIf=\\\"currentPrice - analogPrice > 0\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"swap()\\\">\\r\\n    Click save: {{currentPrice - analogPrice | number : '1.2-2'}} PLN\\r\\n  </button>\\r\\n</div>\\r\\n<mat-divider style=\\\"margin-top: 10px;\\\"></mat-divider>\\r\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between left\\\" style=\\\"margin-top: 10px;\\\">\\r\\n  <button mat-fab color=\\\"primary\\\" matStepperPrevious>Back</button>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {UserData} from \"../../../model/user-data\";\r\nimport {Medicine} from \"../../../model/medicince\";\r\nimport {ApiService} from \"../../service/api.service\";\r\n\r\n@Component({\r\n  selector: 'app-prescription-optimizer',\r\n  templateUrl: './prescription-optimizer.component.html',\r\n  styles: []\r\n})\r\nexport class PrescriptionOptimizerComponent implements OnInit {\r\n\r\n  @Input() userData: UserData;\r\n  _medicines: Medicine[];\r\n\r\n  currentMedicines: Medicine[] = [];\r\n  analogMedicines: Medicine[] = [];\r\n  currentPrice: number;\r\n  analogPrice: number;\r\n\r\n  constructor(private apiService: ApiService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  private populateMedicine(medId: number) {\r\n    this.apiService.getAnalogs(medId, this.userData)\r\n      .subscribe(medicine => {\r\n        this.currentMedicines = [...this.currentMedicines, medicine];\r\n        this.analogMedicines = [...this.analogMedicines, medicine.analogs.length != 0 ? medicine.analogs[0] : medicine];\r\n        this.currentPrice = this.calculatePrice(this.currentMedicines);\r\n        this.analogPrice = this.calculatePrice(this.analogMedicines);\r\n      })\r\n  }\r\n\r\n  public calculatePrice(medicines: Medicine[]): number {\r\n    return medicines\r\n      .map(m => m.price)\r\n      .reduce((sum, current) => {\r\n        return sum + current;\r\n      }, 0);\r\n  }\r\n\r\n  public swap() {\r\n    const tempMed: Medicine[] = this.currentMedicines;\r\n    this.currentMedicines = this.analogMedicines;\r\n    this.analogMedicines = tempMed;\r\n    const tempPrice: number = this.currentPrice;\r\n    this.currentPrice = this.analogPrice;\r\n    this.analogPrice = tempPrice;\r\n  }\r\n\r\n  @Input()\r\n  set medicines(medicines: Medicine[]) {\r\n    this._medicines = medicines;\r\n    if (medicines) {\r\n      medicines.forEach(med => this.populateMedicine(med.id));\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<form (ngSubmit)=\\\"next()\\\" class=\\\"prescription-parser-form\\\">\\r\\n  <mat-form-field>\\r\\n    <input type=\\\"text\\\" placeholder=\\\"Start typing\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"userInput\\\"\\r\\n           [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete autoActiveFirstOption #auto=\\\"matAutocomplete\\\">\\r\\n      <mat-option *ngFor=\\\"let option of medicinesOptions | async\\\" [value]=\\\"option.name\\\"\\r\\n                  (onSelectionChange)=\\\"onMedicineSelect(option)\\\">\\r\\n        {{option.name}}\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <div style=\\\"margin-top: 10px;\\\">\\r\\n    <label class=\\\"mat-raised-button\\\" for=\\\"file\\\">Upload Image</label>\\r\\n    <input type=\\\"file\\\" [hidden]=\\\"true\\\" id=\\\"file\\\" accept=\\\"image/*\\\"\\r\\n           (change)=\\\"handleFileInput($event)\\\">\\r\\n  </div>\\r\\n  <mat-list #medicines>\\r\\n    <mat-list-item *ngFor=\\\"let medicine of selectedMedicines\\\">\\r\\n      {{medicine.name}}\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n  <mat-card class=\\\"prescription-image\\\" style=\\\"max-width: 400px;\\\" *ngIf=\\\"selectedMedicines.length != 0 && imageSrc != 0\\\">\\r\\n    <img mat-card-image [src]=\\\"imageSrc\\\">\\r\\n  </mat-card>\\r\\n  <mat-divider></mat-divider>\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" style=\\\"margin-top: 10px;\\\">\\r\\n    <button mat-fab color=\\\"primary\\\" matStepperPrevious>Back</button>\\r\\n    <button mat-fab color=\\\"primary\\\" type=\\\"submit\\\" matStepperNext>Next</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n\\r\\n\\r\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {Medicine} from 'src/model/medicince';\r\nimport {FormControl} from '@angular/forms';\r\nimport {ApiService} from \"../../service/api.service\";\r\n\r\nimport {flatMap, startWith} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-prescription-parser',\r\n  templateUrl: './prescription-parser.component.html',\r\n  styles: []\r\n})\r\nexport class PrescriptionParserComponent implements OnInit {\r\n\r\n  minLength = 3;\r\n  imageSrc: string = '';\r\n  userInput: FormControl = new FormControl('');\r\n  medicinesOptions: Observable<Medicine[]>;\r\n  selectedMedicines: Medicine[] = [];\r\n  @Output() medicinesEvent = new EventEmitter<Medicine[]>();\r\n\r\n  constructor(private apiService: ApiService) {\r\n    this.medicinesOptions = this.userInput.valueChanges\r\n      .pipe(startWith(null), flatMap(name => this.lookupMedicineOptions(name)));\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public handleFileInput(e) {\r\n    const file = e.dataTransfer ? e.dataTransfer.files[0] : e.target.files[0];\r\n    const pattern = /image-*/;\r\n    const reader = new FileReader();\r\n    if (!file.type.match(pattern)) {\r\n      alert('invalid format');\r\n      return;\r\n    }\r\n    reader.onload = this._handleReaderLoaded.bind(this);\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  private _handleReaderLoaded(e) {\r\n    let reader = e.target;\r\n    this.imageSrc = reader.result;\r\n    this.apiService.uploadPrescription(this.imageSrc)\r\n      .subscribe(medicines => this.selectedMedicines = this.selectedMedicines.concat(medicines));\r\n  }\r\n\r\n  public lookupMedicineOptions(input: string) {\r\n    if (input && input.length >= this.minLength) {\r\n      return this.apiService.lookupMedicines(this.userInput.value);\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  public next() {\r\n    this.medicinesEvent.emit(this.selectedMedicines);\r\n  }\r\n\r\n  public onMedicineSelect(medicine: Medicine) {\r\n    this.selectedMedicines = [...this.selectedMedicines, medicine];\r\n    this.userInput.setValue('');\r\n  }\r\n\r\n}\r\n","module.exports = \"<mat-vertical-stepper>\\r\\n  <mat-step label=\\\"Fill the data\\\">\\r\\n    <app-user-data (userDataEvent)=\\\"onUserDataEvent($event)\\\"></app-user-data>\\r\\n  </mat-step>\\r\\n  <mat-step label=\\\"Add medicines\\\">\\r\\n    <app-prescription-parser (medicinesEvent)=\\\"onMedicinesEvent($event)\\\"></app-prescription-parser>\\r\\n  </mat-step>\\r\\n  <mat-step label=\\\"Optimize list of medicines\\\">\\r\\n    <app-prescription-optimizer [medicines]=\\\"medicines\\\" [userData]=\\\"userData\\\"></app-prescription-optimizer>\\r\\n  </mat-step>\\r\\n</mat-vertical-stepper>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {UserData} from \"../../../model/user-data\";\r\nimport {Medicine} from \"../../../model/medicince\";\r\n\r\n@Component({\r\n  selector: 'app-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styles: []\r\n})\r\nexport class StepperComponent implements OnInit {\r\n\r\n  private userData: UserData;\r\n  private medicines: Medicine[];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public onUserDataEvent(userData: UserData) {\r\n    this.userData = userData;\r\n  }\r\n\r\n  public onMedicinesEvent(medicines: Medicine[]) {\r\n    this.medicines = medicines;\r\n  }\r\n\r\n}\r\n","module.exports = \".section {\\r\\n  display: flex;\\r\\n  align-content: center;\\r\\n  align-items: center;\\r\\n  height: 60px;\\r\\n}\\r\\n\\r\\n.checkbox-margin {\\r\\n  margin: 0 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyLWRhdGEvdXNlci1kYXRhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2Qsc0JBQXNCO0VBQ3RCLG9CQUFvQjtFQUNwQixhQUFhO0NBQ2Q7O0FBRUQ7RUFDRSxlQUFlO0NBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy91c2VyLWRhdGEvdXNlci1kYXRhLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VjdGlvbiB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBoZWlnaHQ6IDYwcHg7XHJcbn1cclxuXHJcbi5jaGVja2JveC1tYXJnaW4ge1xyXG4gIG1hcmdpbjogMCAxMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"next()\\\" class=\\\"user-data-form\\\">\\r\\n\\r\\n  <mat-form-field class=\\\"input-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Age\\\" type=\\\"number\\\" formControlName=\\\"age\\\">\\r\\n    <mat-error *ngIf=\\\"form.hasError('required', 'Age')\\\">\\r\\n      Age is <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <section class=\\\"section\\\">\\r\\n    <mat-radio-group formControlName=\\\"sex\\\">\\r\\n      <mat-radio-button color=\\\"primary\\\" value=\\\"F\\\">Female</mat-radio-button>\\r\\n      <mat-radio-button color=\\\"primary\\\" class=\\\"checkbox-margin\\\" value=\\\"M\\\">Male</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n  </section>\\r\\n\\r\\n  <section class=\\\"section\\\">\\r\\n    <mat-checkbox color=\\\"primary\\\" formControlName=\\\"alcohol\\\">Alcohol</mat-checkbox>\\r\\n    <mat-checkbox class=\\\"checkbox-margin\\\" color=\\\"primary\\\" formControlName=\\\"pregnancy\\\">\\r\\n      Pregnancy\\r\\n    </mat-checkbox>\\r\\n  </section>\\r\\n\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" style=\\\"margin-top: 10px;\\\">\\r\\n    <button mat-fab matStepperNext color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">Next</button>\\r\\n  </div>\\r\\n\\r\\n</form>\\r\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {UserData} from \"../../../model/user-data\";\r\n\r\n@Component({\r\n  selector: 'app-user-data',\r\n  templateUrl: './user-data.component.html',\r\n  styleUrls: ['./user-data.component.css']\r\n})\r\nexport class UserDataComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  @Output() userDataEvent = new EventEmitter<UserData>();\r\n\r\n  constructor(private fb: FormBuilder) {\r\n    this.form = fb.group({\r\n      age: ['', Validators.required],\r\n      sex: 'F',\r\n      alcohol: false,\r\n      pregnancy: false\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public next() {\r\n    if (this.form.valid) {\r\n      const userData: UserData = this.form.value;\r\n      this.userDataEvent.emit(userData);\r\n    }\r\n  }\r\n\r\n}\r\n","export class ApiConstants {\r\n\r\n  private static API_ROOT_URL = '/api/v1';\r\n\r\n  public static API_LOOKUP_MED = ApiConstants.API_ROOT_URL + '/lookup';\r\n  public static API_OCR_MED = ApiConstants.API_ROOT_URL + '/parseImage';\r\n  public static API_ALTERNATIVES = ApiConstants.API_ROOT_URL + '/alternatives';\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ApiConstants} from \"./api-constants\";\r\nimport {Observable} from 'rxjs';\r\nimport {Medicine} from \"../../model/medicince\";\r\nimport {UserData} from \"../../model/user-data\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  public lookupMedicines(userInput: string): Observable<Medicine[]> {\r\n    return this.http.get<Medicine[]>(`${ApiConstants.API_LOOKUP_MED}/${userInput}/`);\r\n  }\r\n\r\n  public uploadPrescription(base64EncodedImage: string): Observable<Medicine[]> {\r\n    return this.http.post<Medicine[]>(`${ApiConstants.API_OCR_MED}`, {encodedImage: base64EncodedImage});\r\n  }\r\n\r\n  public getAnalogs(medId: number, userData: UserData): Observable<Medicine> {\r\n    return this.http.post<Medicine>(`${ApiConstants.API_ALTERNATIVES}/${medId}`, userData);\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","export class UserData {\r\n  age: string;\r\n  sex: string;\r\n  alcohol: boolean;\r\n  pregnancy: boolean;\r\n}\r\n","import {NgModule} from '@angular/core';\r\n\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatAutocompleteModule, MatChipsModule, MatNativeDateModule} from '@angular/material';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatAutocompleteModule,\r\n    MatListModule,\r\n    FlexLayoutModule\r\n  ],\r\n  exports: [\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    MatDividerModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatAutocompleteModule,\r\n    MatListModule,\r\n    FlexLayoutModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class MaterialModule {\r\n}\r\n"],"sourceRoot":""}